<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/jdbc
    	http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
    	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
    	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        ">
	<!-- Honor @Bean, @PostConstruct, @PreDestr oy, and several others -->

	<!-- Search the classpath for @Component, @Repository, @Service, @Controller 
		annotated classes, see http://static.springsource.org/spring/docs/3.0.x/api/org/springframework/context/annotation/ClassPathBeanDefinitionScanner.html 
		for more information -->

	<context:component-scan base-package="com.socialradio" />

	<bean id="elasticSearchClientFactory"
		class="com.abenchers.socialradio.contentinformation.elasticsearch.ElasticSearchClientFactory">
		<property name="elasticSearchNodeURL" value="${elasticSearchNodeURL}"></property>
		<property name="elasticSearchNodePort" value="${elasticSearchNodePort}"></property>
	</bean>

	<bean id="tagExtractor"
		class="com.abenchers.socialradio.contentinformation.metadataextract.TagExtractorMediaInfo">
		<property name="mediaInfoDirectory" value="${mediaInfoDirectory}"></property>
		<property name="mediaInfoApplication" value="${mediaInfoApplication}"></property>
	</bean>

	<bean id="indexInformationContent"
		class="com.abenchers.socialradio.contentinformation.elasticsearch.IndexContentInformationElasticSearch" />

	<bean id="searchContentInformation"
		class="com.abenchers.socialradio.contentinformation.elasticsearch.SearchContentInformationElasticSearch" />

	<bean id="mediaInfoExtractor"
		class="com.abenchers.socialradio.contentinformation.metadataextract.MediaInfoExtractor">
		<property name="trackSchema">
			<map>
				<entry key="title" value="//Title/text()" />
				<entry key="album" value="//Album/text()" />
				<entry key="albumPerformer" value="//Album_Performer/text()" />
				<entry key="performer" value="//Performer/text()" />
				<entry key="genre" value="//Genre/text()" />
				<entry key="duration" value="//Duration[3]/text()" />
				<entry key="bitrate" value="//Overall_bit_rate[2]/text()" />
				<entry key="fileSize" value="//File_size[6]/text()" />
				<entry key="format" value="//Format/text()" />
				<entry key="url" value="//Complete_name/text()" />
			</map>
		</property>
		<property name="parser">
			<ref bean="domMediaInfoParser" />
		</property>
		<property name="tagExtractor">
			<ref bean="tagExtractor" />
		</property>
	</bean>
	<bean id="domMediaInfoParser"
		class="com.abenchers.socialradio.contentinformation.metadataextract.DOMMediaInfoParser" />

</beans>
